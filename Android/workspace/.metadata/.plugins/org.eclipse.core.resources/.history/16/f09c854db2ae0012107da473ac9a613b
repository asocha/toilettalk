package com.pottymouth.restapihandler;

import java.io.IOException;
import java.util.List;
import java.util.Locale;

import android.app.ProgressDialog;
import android.content.Context;
import android.location.Address;
import android.location.Geocoder;
import android.location.Location;
import android.os.AsyncTask;

import com.pottymouth.toilettalk.MainActivity;

public class ReverseGeocodingTask extends AsyncTask<Location, Void, String> {
	private Context mContext;
    private ProgressDialog progressDialog;
	private MainActivity activity;
    
    public ReverseGeocodingTask(MainActivity activity, Context context) {
        super();
        mContext = context;
        this.activity = activity;
    }

    @Override
    protected void onPreExecute() {
    	// TODO Auto-generated method stub
    	super.onPreExecute();
    	
    	progressDialog = new ProgressDialog(mContext);
		progressDialog.setMessage("Getting your current address...");
		progressDialog.setCancelable(false);
    }
    
    @Override
    protected String doInBackground(Location... params) {
        Geocoder geocoder = new Geocoder(mContext, Locale.getDefault());
        String addressText = "Could not get you address :(";
        
        Location loc = params[0];
        List<Address> addresses = null;
        try {
            // Call the synchronous getFromLocation() method by passing in the lat/long values.
            addresses = geocoder.getFromLocation(loc.getLatitude(), loc.getLongitude(), 1);
        } catch (IOException e) {
        	
            e.printStackTrace();
        }
        if (addresses != null && addresses.size() > 0) {
            Address address = addresses.get(0);
            // Format the first line of address (if available), city, and country name.
            addressText = String.format("%s, %s, %s",
                    address.getMaxAddressLineIndex() > 0 ? address.getAddressLine(0) : "",
                    address.getLocality(),
                    address.getCountryName());
            // Update the UI via a message handler.
        }

        return addressText;
    }
    
    @Override
    protected void onPostExecute(String result) {
    	super.onPostExecute(result);
    	
    	actvity.publishAddress();
    	
    	
    	progressDialog.dismiss();
    }
}